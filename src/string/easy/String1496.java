package string.easy;


import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * @author zard
 * @date Created in 27/09/2021 10:22
 */
public class String1496 {

    public static void main(String[] args) {
        String path = "SNWWESNNWSWESEEWWNESNWWWNSNSSSWEEESSWEESNNSWWSWSWWSWNWWNNNSSEENNSSEENSENSNENEWNNWWNSWEESSSWNNNENEEEEEWSWWWWSSSNSEWENWWENSNESWNWWENWWSNSEEWEESWWWNWWENNSSEESWEEEWSSWWWWWWSNENENNNEESEWWSWNNESSSSSNEEWNNNEWWNNNSESSNENWNSEWWNEEESESWENSNSWSSNNEEEEEEWEENSNEWWSWWWNSSNWSWNNSNWSNSNSWEENSWSNSESWWESENEWSNSNENNEWWNENSSEWNWENEENWSNWWNNWWWEWSSESSSNWWEENENWEWNSNENSNWWSSNNWSSWESENNEWWSNWWENSSNNENSEWNESWWNSENNENWSSSSESSWSWSWWNWEESEWSWENWESEESEEEEWESWNWEWENWNNWESWNWWWESSNWSSEENSEWEEWWNSSEEWENWSEWNWNSNESEWEEESWNWWNEWENENSWNEEWWWWWSNSNNSEWSWEWEEENSWSSNNSWWSNWNNENSNWEWWEEWNWNWWESEWWESNWSENEESESESSNEWWSSWNNWENSWSEESWENWNWWNENNNWNSNSENSWSSSEWNSSWSENEESNSSSSEWNNEENWSSESWNENSSWWWENEWWNENWEWEWSNWNNWWEEWNWEEENENWNNWSWNWWWEESNEEEEEEESNENNSWEESESWSSSSNNNSWNESSNNENNSWEWSSWSNSEESENEWESWSNNWWESESNESEEEEEWEESSEEWNSNNWNEEWNESNEENNENESWWSNSEEEWSEENENENNNNSNNSNESEWWSNWWNNWWESESSWSNSSEEWWWEEEWWWWSSWWNSNSSSWNSWWNENWNNSSENWSSNNWNSSNEESWNNSNSNNSWNNESESSWSSEENENNEWEWWSNESWSENNESNSNWWWNSNSEEEENNNWNSENWNENWNWENNWSWWSSSSNSWSNNEESWNNWNSESENSWWSWSSWENNWWWNEWSEWWSNNWWSEWWSESSSEESWSNSNWEESWESWNWWNEWENWWNEWWSWSEWENWNSWNSNEWENESWWWSWSEEESNWEWWWWSSEEWNNWNWSEEWWESESNESSNENWSWENSEEWNSSWNESWNENNEWNSSSWESNENSWNNWNESSWSNWWNWSEEWSNNSSNSNWEWSNESNWNESSSSESSWEENSEWESSWNEWWNNNENWNNENSNENNNWWEENSNWNWSWSENEESWESEEWNNNSNENNENWSENNNENWEEWSESNNWNSENNSNWWWSSNNWNEWWWENNNSNESENESESESNNENSWEWNSSSNNNWNENWESENWWENSWWSSNEWENNSNEWWWSWNWEWESEWWNWSWWEENNSEWWSSENSNSEWWEWEEWEWSSWWSENWSSSEENWSEEEWNWWNSNSWSWESENSNWENSEEEENWSNEEWSSNEESESNWWSWNNNWSSWENENESSWWEWNEENNSSNENSSNSENWESWWNWWSNENNWEWSWWEENESSSWWWNWEEWSWSWNNWWSSNSSEENNNNEESNWWSEWWNWWWWNEWENENSWNSENNWSWNWNWNWEWWSEWWENEEENEEESESENWENEWWNWSENSNSSWESSNEWNWENSSSNSSWWWNENNWWNEWSESWWEENENENWSSESESEESEWNEWENWWWSSNNSSSWWNSNSWEEEWSWNENENSEWESEWSWNSSNEWENNEEESWSNWSWWNSESNNEWWWEWNEWNNWSNSWEWENWNEEENESWNWWSSNSEESWENENSSWWSSWNWNENEEWEEEESNENNESSEESSWWNSSSSSESNNSSSEWWENNNSWNWNNWWNNENWSEWNWNESESNWNNSWWESSEEESSSWNSSWSWWNWWSEWWSWNWESNSWSNNESEENSWEEEEEEESSSNESWEENENNWENNENNENNWSSNSEWNSESSNWEWESWNNNWESNSNWWENESNEWNNENWSWSEWWSSNWNSWNSSSNSSNNEWSENEESWNNSWEWSESESNSSWESNNWNENENENESNNEEWWNWNWNSENESENESNNENNWSSSSWNENEEWSSWWEEWNWWEENNNNWNENSSSNWSEWNSNSESNSWEWWNEEWSNNENESEWEWENWNWNENNSNSNSEWNESSWNSNEENSWNENNSWNWEENSNWSNNESNNEEESENNWNNNSWSWNNEWENNEEWNNNWEEENNEESEENSWSEEWNWNNSSWSENESSSENEENNWSNNSWWSNNNSESNWENNSWNENSESNWESNNEWNSNEWEWWWNSWNENNNWWESEWSWNWENWEWEWNSWSWEESWNWNWWWEWEWEWESSEENWEEWSEWNEWNWNSSNNWWNSWSWESWEENSNWWSESNNNSEEWSSWSNNWEWNNSNSSNENSSNSEENEWENENSNEESSNENSSEEWESENWNSENWSENNEWSEESWNESWEESWEWSSNESESENSNESSWSEWNESSWSWWENSWWNESSWNEWWNSWEESWNSESESWWNWNSSSSSWWEENNNWEWNWNWESNSNWSESNWNSSEWESENSWNSNNWWNNSWSSNESEWENNSESSWSNWNESWSWESWSEWWNSWSNNSWWSNSNNESWSSESNENSESEWWSENWEWSSWSNWEWSWNEWNWEESNSNNSEWNNNWNWENNWWNSSNWSSSNNWNNWWWSSSENNWSNEESNENEEEEENNNNNWWEEWSWSWNNNWNEESWEENSEEEESWWSNWENENWENNNNSWSEWSSNNWNNENESESENEESWWSSEEWEEWNNNNNSEESWWEENSESWWSEWEEWSNEWSSNSNNWSNSNWNSWENWWSWWSNESESENNWSSNESESSSSSESWSENSWNSWNSWWEWNSEWWSSWESWSWWSWWSSSNSESEENNSWSNWEWSEWSNWESSSSNWSSSNWWWESNEWNWWWENSNEWESNSNWSSSEENSESWNNSSNWWEWENWSNNSSESEWNSNWWWWEWNESESNWNSENNENNEESWENEENNSESESEEWSSSSNNNSSWWNWNWNENESNSSSNWWEEWNSWWESSEWESSNSEWNWNSEWWEWSNWSSESSSNSENWNNNENEEWWNSSSSWEWSSWNSNSWWSNWNSWNEEENSWNWWWNNWWWSWNNNENNNSWNENENWEEESENSSESEENNNNWSWNSWSEWWNNEWWWWSENENEWNEENESNNNNNSSSNSESSSEEWEWSWWEENESSSEWSWSNWESNWNESSWNWSSNNSWNWEWNSSWWSSSESNESWWNNEENNESSSEESWSWWWSESEWWNEESEWSENSSENSSWWWSESSENESEWENWNWSWESNNNSSSSSEWWNNNEWNSEEWSNNNNENNESWEESWSSNWSNEWWSSWSSEWEEWNEEWENEWSSNWWWSNWENESSWNNWSWSNESEEWENNSNESNEEESENWNSWNNSEEWWENNWNSNWNSENWENENWWNSWSNENNEENSNNEWWESENEWNWSSNNSESNSEEEWWSSESEWEEEWSESSSENENSNNWWNSEEWNSNNEEWSSWENWNNNEWSEEWENWNENNWWWEWSEWSSNSWWSEEWESNESNWEWWNSSWNWSNENNWEWNNWENEESWEEEWWNEWWNNSWWWWESNSNNNSWWSENESNNWNWWNNNENSEWSWNWNSEESSWSSWNESWSNSNNESSNWNNWWSEWSEESNNWSNWSWWSSNNSNNNSWNSNWEWWENNENNNWNWSEWSNWWNWWEWWEWSENEEWWEWSWSESNSSSSWENNWNWESNSWSNNSWWNSENWNWENNWEEWWWEWEEEESSEEWSSEEEWNNNNEEWSWNNENWEEWNSENNSSSNEEEEWNEWWWNEEWNEWWSWNEWNWNEESSNSWWSSEENNNSEWESNWWSNNENWNWWWWNNSNNENSESWEWNNSWNESSEWNWWEEEENESNSWNSWNSNNSSNNNNNNSSEENWSNSWWNSWWNESEESNSWENSEESWEESSSSWWENSEENEWSEWSEENEWNSWEWEWNWEEENWESEESNNEEENSWEWSSSSNWWSWSENSSENWWEEESESSNESENWWSESESWWWEESEESESSNNSSWSEESENESWWWSNNNNENESEESSNWSWNSNSESENWWEWEWWNWSWWSNWSEWWEENENWSSWNSSWEESSENEENNWNWWSEEEWNSNNEWSWSNENNENENEEESWSSSESENWWWNNESEESSWWWWNEWNWENEENNESESENWENENNSWWESSSNNSSENSNEWNWSNNEWNSSSWSWWWSSENSSSSNWSNEWWEESSNWSNWWEENSENENEENSENWSSSENENNENSWNWWENNEWEENSWEESESWSSWEESSSNENENEEWENENSSWEWNEWNSEESEWSESENNNENEWSWSEWSWEEEENENENSWNNEWSEENWNSWWNWNEENEEEWNENNSWENSSNSEWESWESWWNNNSEESSSSEESWWNWESWSESWSEENSSSSWWNWEWEESESESSWWSWSNESWESNNSSSWSSESENSWWNWSEWWNENSESSWEWWNENENESWNEEWWNSESEEWNWEENEWWEWSSWNNNWNESWWSSEWSENNSWNNNNWESNNWSSSWWNEWEWNEWSSEEWWWWWWSSWNSSNESNNNENNEWSWNSEEEENWNNSSSESSENSSSNWWSEWWWENNSWWWWSNWENSESWNNWNEEWSSWSSSNEWSSNSWWEESESWSSSESNWNSESNNNWSEWNWEWNEESSEEEWEEWNNSNWNENEEENNWNNESWNSWSESSWNNWSESWNEENWNNWNSNWNNNNWEESWESWWWSWWESNWNWWEEWSNSWNNENWESEEWWESSNESEWEWEWNENESSENEEESNNSENWSWNSWEENEWEWWESSWNSWESENNWESNWWNEWWNEENWENSEWEESEESSESNWWWWEEENNNNSNENWNNWEWNNWWSSNEEENENWSSENWWEESEWSSWNWWNSSWEWENSESSNNNENNWSWEENSNNESWNEWWWNNEENSNWWEWEENWNWWENWNWSESWNSWSWENSNNWEWEESSSWEWNNSNSNWWSNWSNSWNSSEWSENNNSSENNWNNNWNSSNSWWENEENSNWSNSWEEEWWSWESNESENEEWEESWSNSNWNEEWSSWENSNWWSNSENWESNNNEEWSNSNNNENEEWNSWSWSNSWNSNESEWEWSEEWENWSENEEWNEESNWSESEWSSSEENEWENSWWNNSSNNESSSSNWNSSWNWNWNWSWWENSWWWWENEWWENENWSWWEEWNSWWWWWNWESEWNEENSESSSNWEENWSNWESENNWNSNNESESWENSSNEWWSNWNSNEESWSSSWWSENSSSWNWNSEEWSNSEWSWWSWWWNNSSWWWNSSESNSNNSSSSEESSSENWWNNNSSSWSNSESNSESNWNNSNWWWWWNEEESEWWSNWNWSENSSESEESSNEESSWENSESNSWWEEENESEWNESNEESENSESSEENWWSSEEEWSWWEEWSEEEESESEWSSSNWSNNWWSWSEWWSEEWESWSSNENSNWENNEEWWWNSNSEENWSNENSWNNSESNEEWNSSSSNNWEEWSWSWWSSWWSSWEWWWWWEWEEWNSWNNENEESNEEWSNNEWWSSSWSSSWWNNENNWSEWEWEEESNESNESEEEWSNSEEWEWNSEESENNSWNEWWEWNWSWSWWEWWNENSNWEWENNESSWWSESSWSEWESWNWWWWSWWNWNSNSWWEENSSWSWESESWEESSNSNNSWNNENNWWNWWNWNWESSWWWWWWNENEWSSWWWNENSNEESWNENNWWEWWENENEENWNNNSSEENWNENNWWEWNSSSWWWWNSESWSESSSNENSSENWEWWNWWWESWENNNSWENSNNNWSNESNSWSSSEWENSWNWENEWSEWEESEEESWENWNWNSENEENEEWNEWSNNSNWWSSNEWNWEWESESEESWENWNSSNESENWNWNSNENENWSNWWWSNWSSESNEWENENWWSSNNNENESSSNEENENENWEWWWWNNNESSSNEEEEESNESEWSSNWESWSWWSESEWEEENNESWSWEWSNEWSNWEEWWESNSSSSNWWSSESEWSESESEWWNWSNWSNNSENSEENNSSNSSNEEESEWWNEEWSWNNSESNENNWSWENSSNWNEWNSNSESEWNNWENSWSWWNENNSSWWNWWNNWEWNSEEENWSNEWNWWSEEWSESNNNNWWSSWNWNNNSSNEESEWSNENSNNEENNWNNNWNWWSWSWWWEEEWSSSEWESESENSEESNNWSWWNEEWSNWWSWSWESSEEWESEEWWSENNNNSSWENNNWEWNNWESSEESSNWNSSEWNSEEEWSESWWSNWSWNNSENENNWENEWENENWEWNNNEENESNWEWWNSNEWSESNWESENNWENWWESWNEWWSSESNSWSWWWWSEENSSSSWWEWWSNSSSNSNSEESEESNNNSENEWWEESNWWENSNSNESEEEWNWSNNSENEEWEWEEENNWESNSESEWSNEENNSWWWNNSEWSWWSWNSSENENWESSWWWWSESWWWWSSWNWNNEWEENWWEEWESSSWNEWSNEWWSWWNEWNWNEEEENSEESSESNWEWWNWSNWEEEENSSEWNWENWNSNEENSWEWWSENENNWNSWSESNNNESNWWESWSWEWSEENWWWEEEESENEEEWEEWSNSENNWNNEEEESESWSWENWENESSWEESSSSSESWWSEWEEESNENEWSSNEEENWNSSSNNNESEWSNSESEESNNWNESENSNSNNEESNSWNSSSNSSWEESSWWWSSNSSSNESESESEESENESWSEENENNWWEWWWSWWNEENWEWSENWSSEEEWNEWNWWNWENNWWWNWNEEEEEWWNSNENESNWEESEWEWSENSSSWEWEESEEEEWNNSNESNEESSSSSSWSWWNNSEWENNNWNENNWWNWNNWSWNESESWNNNNSNWEWSWSNWEWSEEENSESENWENESWWSNNSSNESESEESSEEWSNWNWEEWESNENENEESSWWNEEESSWEWWWEEEEWWNWNEEWEWEEWESNNEEENEENENEEENNWWWWESSWEEESSWSWNEESESSNWSSWWEEEENNNWEEWNWWSNWSWWSSWENNNNNSENSEENWWNNSNNWWWENNNWNNENSENESSESNNNSEEEEWNESENSWNSWNWWESWWWSEEEWNNNSSNEWNWEWSSSWNEEEENNWEWEENESSNSNEESWNNEWWEWWNSWNSWWNWWNNESENWWNSSWNEESWEWSSWNSNWSNNEWENSEEESWSNSNNNSNESEEEWEWWWWWSSENWNEESWENWSNNWWWNWWSNEWSNENWSNSEESNWEWEWSWESENWSSNNNSNEWESWEESNWNEWNESSSEWEWWWSSEWSSNWNEEWEEWSEENSWSNENNSEWNNEWNWEEEWEWNWWSSNWSSNNNSNESSNSSNNNSSENNSNSSENWWWSSESNWENSSWSNNESSNESSEENSNSWNWSESNWEWSSENEESSNSENEWSSNEESEESWWESNSWNWSWESESWWWESNNSENWENWWNNWENNSSEESEWNNWENSNWSNNWSESWWSNSESEENSESNSEESSNWSSNWWWSEESNSWESSSEWNEEWEENSWEENESNWNSESESEWEESENSEWENSWNNEWSEEEWNNWWWWWESWEWNNENEESWSSEWNEWWSWWSNNEWEWNNSSSEWWWEEWWSESSNSWNEWSWWEWENENWEENNNWSSNSSEWWWWWEWWSEEESENWNWESNENESSNESSNNNWWSWSENSWWWNWSENNEWEEEWWNEWNSWESSSESWWESNWSNNWSSNWWSNWEWWWWSESEWSSSNNWSWSSESNNSWSESESWEESWEWESEEWSESWSENNNSWEWWWWSNNNESNNSEESNSWSEWEWSWSNNNSWSWNNWEWSSWSSSWNNENSWNENENSNEEENEEEENSNSNWWNSNEWSSNWNSWNSSEESSWNEEESWWWNNNNWNWSSWSWNWEWNEWESESSENWESWEEWSWSESEWSNENWNWENNSNNWNSEWESEWWWWNWWNWENSENNWWNWNWNNWWWWEWSNEWSNNWSSWNESEEEWWWWESNWEWEEEWNWWSEESNENWWEWEWWNWNNWSEWNNNNNNSSNSESSWEWWNESSENESWEWSSWENSSSEWESNNWSNNSEEWWNSSEWSSNNWEWENNSSWEWWWSNSSSEWSESWWNWNSWNNEENEWWENWNSWSWWENWWSNWSWEESWSNSNSWEWNNWNNESEEESEWSSWNNEWWNENNESWNWENSEWNWNWEWNNWNNSSWWESNWWWEWNSWNSENSEEWSSNWEEENWENNNEENSSESEWSNSEESWWWWWNNWWNWNEENNSEESEEEWNESENWWNESENSWEEWNNNNSSSNNSWWWWNNNEEEWSENNEEEESWSESNNEEESNNENESEWWSSSNWEENWNESNESENNWESSSWNWSWNNWEEENEWNNSWNWWNNENWENWSWSSWEWEWNEWSWNWWEEESWWSWWWWWWESWNWNEWEENENSEENNNEENSESWWSWNSNNENSESNSSNSENNNNWENEESNNENWNSNEWSSSEWEWENWEEWWEWSWNEEEENENNESWSNSSNNWEEEWSEWNNSENNENWNENSNENEWWSENNWWESWNWWESESWNEENSEWNSWSWESENENWSNNNWNNSWSESEENSNESSSNNNWENNNSESEWWNSESSWENWWWENWEWNNSSNWSENSEWNSEENWSEESNNWNEEESNEEWWSSWEWWNEWENESSESWSSESWNESNNEENNWEESSNNSSNNWNNSSEEWSNWNNEENNWSEEWNWESWSSWESNWEWEEEEWSNNSESNWWWEEENENNEWSNSEWEWSWNSNNNSNWWEWSSEEWWNNSWENSENSWSNSNWESWENENNSWNEWEESNSWEWEWSNSSEWNSEESSWWSSEWWENNNESWNWWNESNWWWNWWWWESNENSSWESESSWSSEWESNWWSNESSEWSNSWESSSSWEENSWWSNWEEENEWWEWNSSEEEEEEESESWSNEEEENSENEENSWSENNENWSNNSEEWEWENNSSNSWWNENEWSSESENSESNEWSNSNNWSNNSWSSEWESEESESWSNNWNSESNNEWWWESESEEWWNNNSWENSWNEEEEWSSWNNNWNSSNENEEWWNSNEWESNWNSSSSNWEEEWNSESEENWEENENNSEWWEWNWENSNSSWSSSENENNWESSNNSSENNSWWWESSSENNNEWEEEWENWSNSEESEEEENSNNWWNWWWNSENEWEESNWEESNNENENESWNNENEWWWSENSWESSSEENSS";
        boolean b = Solution.isPathCrossing(path);
        System.out.println(b);
    }

    static class Solution {
        public static boolean isPathCrossing(String path) {
            int currentX = 0;
            int currentY = 0;
            Map<String, String> hashMap = new HashMap<>();
            hashMap.put("0,0", "dummy");
            for(int i=0;i<=path.length()-1;i++){
                char ch = path.charAt(i);
                if(ch == 'N'){
                    currentY++;
                }
                else if(ch == 'E'){
                    currentX++;
                }
                else if(ch == 'W'){
                    currentX--;
                }
                else{
                    currentY--;
                }
                String currentKey = String.valueOf(currentX) + "," + String.valueOf(currentY);
                if(hashMap.containsKey(currentKey)){
                    return true;
                } else{
                    hashMap.put(currentKey, "dummy");
                }
            }
            return false;
        }
    }
}
